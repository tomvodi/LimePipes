// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	apimodel "github.com/tomvodi/limepipes/internal/api_gen/apimodel"

	mock "github.com/stretchr/testify/mock"
)

// ApiModelValidator is an autogenerated mock type for the ApiModelValidator type
type ApiModelValidator struct {
	mock.Mock
}

type ApiModelValidator_Expecter struct {
	mock *mock.Mock
}

func (_m *ApiModelValidator) EXPECT() *ApiModelValidator_Expecter {
	return &ApiModelValidator_Expecter{mock: &_m.Mock}
}

// ValidateUpdateSet provides a mock function with given fields: tuneUpd
func (_m *ApiModelValidator) ValidateUpdateSet(tuneUpd apimodel.UpdateSet) error {
	ret := _m.Called(tuneUpd)

	if len(ret) == 0 {
		panic("no return value specified for ValidateUpdateSet")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(apimodel.UpdateSet) error); ok {
		r0 = rf(tuneUpd)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ApiModelValidator_ValidateUpdateSet_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateUpdateSet'
type ApiModelValidator_ValidateUpdateSet_Call struct {
	*mock.Call
}

// ValidateUpdateSet is a helper method to define mock.On call
//   - tuneUpd apimodel.UpdateSet
func (_e *ApiModelValidator_Expecter) ValidateUpdateSet(tuneUpd interface{}) *ApiModelValidator_ValidateUpdateSet_Call {
	return &ApiModelValidator_ValidateUpdateSet_Call{Call: _e.mock.On("ValidateUpdateSet", tuneUpd)}
}

func (_c *ApiModelValidator_ValidateUpdateSet_Call) Run(run func(tuneUpd apimodel.UpdateSet)) *ApiModelValidator_ValidateUpdateSet_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(apimodel.UpdateSet))
	})
	return _c
}

func (_c *ApiModelValidator_ValidateUpdateSet_Call) Return(_a0 error) *ApiModelValidator_ValidateUpdateSet_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ApiModelValidator_ValidateUpdateSet_Call) RunAndReturn(run func(apimodel.UpdateSet) error) *ApiModelValidator_ValidateUpdateSet_Call {
	_c.Call.Return(run)
	return _c
}

// ValidateUpdateTune provides a mock function with given fields: tuneUpd
func (_m *ApiModelValidator) ValidateUpdateTune(tuneUpd apimodel.UpdateTune) error {
	ret := _m.Called(tuneUpd)

	if len(ret) == 0 {
		panic("no return value specified for ValidateUpdateTune")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(apimodel.UpdateTune) error); ok {
		r0 = rf(tuneUpd)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ApiModelValidator_ValidateUpdateTune_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateUpdateTune'
type ApiModelValidator_ValidateUpdateTune_Call struct {
	*mock.Call
}

// ValidateUpdateTune is a helper method to define mock.On call
//   - tuneUpd apimodel.UpdateTune
func (_e *ApiModelValidator_Expecter) ValidateUpdateTune(tuneUpd interface{}) *ApiModelValidator_ValidateUpdateTune_Call {
	return &ApiModelValidator_ValidateUpdateTune_Call{Call: _e.mock.On("ValidateUpdateTune", tuneUpd)}
}

func (_c *ApiModelValidator_ValidateUpdateTune_Call) Run(run func(tuneUpd apimodel.UpdateTune)) *ApiModelValidator_ValidateUpdateTune_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(apimodel.UpdateTune))
	})
	return _c
}

func (_c *ApiModelValidator_ValidateUpdateTune_Call) Return(_a0 error) *ApiModelValidator_ValidateUpdateTune_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ApiModelValidator_ValidateUpdateTune_Call) RunAndReturn(run func(apimodel.UpdateTune) error) *ApiModelValidator_ValidateUpdateTune_Call {
	_c.Call.Return(run)
	return _c
}

// NewApiModelValidator creates a new instance of ApiModelValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewApiModelValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *ApiModelValidator {
	mock := &ApiModelValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
