// Code generated by MockGen. DO NOT EDIT.
// Source: api_router.go

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockApiRouter is a mock of ApiRouter interface.
type MockApiRouter struct {
	ctrl     *gomock.Controller
	recorder *MockApiRouterMockRecorder
}

// MockApiRouterMockRecorder is the mock recorder for MockApiRouter.
type MockApiRouterMockRecorder struct {
	mock *MockApiRouter
}

// NewMockApiRouter creates a new mock instance.
func NewMockApiRouter(ctrl *gomock.Controller) *MockApiRouter {
	mock := &MockApiRouter{ctrl: ctrl}
	mock.recorder = &MockApiRouterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApiRouter) EXPECT() *MockApiRouterMockRecorder {
	return m.recorder
}

// GetEngine mocks base method.
func (m *MockApiRouter) GetEngine() *gin.Engine {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEngine")
	ret0, _ := ret[0].(*gin.Engine)
	return ret0
}

// GetEngine indicates an expected call of GetEngine.
func (mr *MockApiRouterMockRecorder) GetEngine() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEngine", reflect.TypeOf((*MockApiRouter)(nil).GetEngine))
}
