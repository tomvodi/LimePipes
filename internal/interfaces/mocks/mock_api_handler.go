// Code generated by MockGen. DO NOT EDIT.
// Source: api_handler.go

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockApiHandler is a mock of ApiHandler interface.
type MockApiHandler struct {
	ctrl     *gomock.Controller
	recorder *MockApiHandlerMockRecorder
}

// MockApiHandlerMockRecorder is the mock recorder for MockApiHandler.
type MockApiHandlerMockRecorder struct {
	mock *MockApiHandler
}

// NewMockApiHandler creates a new mock instance.
func NewMockApiHandler(ctrl *gomock.Controller) *MockApiHandler {
	mock := &MockApiHandler{ctrl: ctrl}
	mock.recorder = &MockApiHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApiHandler) EXPECT() *MockApiHandlerMockRecorder {
	return m.recorder
}

// AssignTunesToSet mocks base method.
func (m *MockApiHandler) AssignTunesToSet(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AssignTunesToSet", c)
}

// AssignTunesToSet indicates an expected call of AssignTunesToSet.
func (mr *MockApiHandlerMockRecorder) AssignTunesToSet(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssignTunesToSet", reflect.TypeOf((*MockApiHandler)(nil).AssignTunesToSet), c)
}

// CreateSet mocks base method.
func (m *MockApiHandler) CreateSet(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateSet", c)
}

// CreateSet indicates an expected call of CreateSet.
func (mr *MockApiHandlerMockRecorder) CreateSet(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSet", reflect.TypeOf((*MockApiHandler)(nil).CreateSet), c)
}

// CreateTune mocks base method.
func (m *MockApiHandler) CreateTune(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateTune", c)
}

// CreateTune indicates an expected call of CreateTune.
func (mr *MockApiHandlerMockRecorder) CreateTune(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTune", reflect.TypeOf((*MockApiHandler)(nil).CreateTune), c)
}

// DeleteSet mocks base method.
func (m *MockApiHandler) DeleteSet(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteSet", c)
}

// DeleteSet indicates an expected call of DeleteSet.
func (mr *MockApiHandlerMockRecorder) DeleteSet(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSet", reflect.TypeOf((*MockApiHandler)(nil).DeleteSet), c)
}

// DeleteTune mocks base method.
func (m *MockApiHandler) DeleteTune(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteTune", c)
}

// DeleteTune indicates an expected call of DeleteTune.
func (mr *MockApiHandlerMockRecorder) DeleteTune(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTune", reflect.TypeOf((*MockApiHandler)(nil).DeleteTune), c)
}

// GetSet mocks base method.
func (m *MockApiHandler) GetSet(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetSet", c)
}

// GetSet indicates an expected call of GetSet.
func (mr *MockApiHandlerMockRecorder) GetSet(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSet", reflect.TypeOf((*MockApiHandler)(nil).GetSet), c)
}

// GetTune mocks base method.
func (m *MockApiHandler) GetTune(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetTune", c)
}

// GetTune indicates an expected call of GetTune.
func (mr *MockApiHandlerMockRecorder) GetTune(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTune", reflect.TypeOf((*MockApiHandler)(nil).GetTune), c)
}

// Index mocks base method.
func (m *MockApiHandler) Index(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Index", c)
}

// Index indicates an expected call of Index.
func (mr *MockApiHandlerMockRecorder) Index(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Index", reflect.TypeOf((*MockApiHandler)(nil).Index), c)
}

// ListSets mocks base method.
func (m *MockApiHandler) ListSets(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListSets", c)
}

// ListSets indicates an expected call of ListSets.
func (mr *MockApiHandlerMockRecorder) ListSets(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSets", reflect.TypeOf((*MockApiHandler)(nil).ListSets), c)
}

// ListTunes mocks base method.
func (m *MockApiHandler) ListTunes(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListTunes", c)
}

// ListTunes indicates an expected call of ListTunes.
func (mr *MockApiHandlerMockRecorder) ListTunes(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTunes", reflect.TypeOf((*MockApiHandler)(nil).ListTunes), c)
}

// UpdateSet mocks base method.
func (m *MockApiHandler) UpdateSet(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateSet", c)
}

// UpdateSet indicates an expected call of UpdateSet.
func (mr *MockApiHandlerMockRecorder) UpdateSet(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSet", reflect.TypeOf((*MockApiHandler)(nil).UpdateSet), c)
}

// UpdateTune mocks base method.
func (m *MockApiHandler) UpdateTune(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateTune", c)
}

// UpdateTune indicates an expected call of UpdateTune.
func (mr *MockApiHandlerMockRecorder) UpdateTune(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTune", reflect.TypeOf((*MockApiHandler)(nil).UpdateTune), c)
}
