// Code generated by "enumer -json -yaml -type=TimeLineBoundary"; DO NOT EDIT.

package time_line

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _TimeLineBoundaryName = "NoBoundaryStartEnd"

var _TimeLineBoundaryIndex = [...]uint8{0, 10, 15, 18}

const _TimeLineBoundaryLowerName = "noboundarystartend"

func (i TimeLineBoundary) String() string {
	if i >= TimeLineBoundary(len(_TimeLineBoundaryIndex)-1) {
		return fmt.Sprintf("TimeLineBoundary(%d)", i)
	}
	return _TimeLineBoundaryName[_TimeLineBoundaryIndex[i]:_TimeLineBoundaryIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _TimeLineBoundaryNoOp() {
	var x [1]struct{}
	_ = x[NoBoundary-(0)]
	_ = x[Start-(1)]
	_ = x[End-(2)]
}

var _TimeLineBoundaryValues = []TimeLineBoundary{NoBoundary, Start, End}

var _TimeLineBoundaryNameToValueMap = map[string]TimeLineBoundary{
	_TimeLineBoundaryName[0:10]:       NoBoundary,
	_TimeLineBoundaryLowerName[0:10]:  NoBoundary,
	_TimeLineBoundaryName[10:15]:      Start,
	_TimeLineBoundaryLowerName[10:15]: Start,
	_TimeLineBoundaryName[15:18]:      End,
	_TimeLineBoundaryLowerName[15:18]: End,
}

var _TimeLineBoundaryNames = []string{
	_TimeLineBoundaryName[0:10],
	_TimeLineBoundaryName[10:15],
	_TimeLineBoundaryName[15:18],
}

// TimeLineBoundaryString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func TimeLineBoundaryString(s string) (TimeLineBoundary, error) {
	if val, ok := _TimeLineBoundaryNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _TimeLineBoundaryNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to TimeLineBoundary values", s)
}

// TimeLineBoundaryValues returns all values of the enum
func TimeLineBoundaryValues() []TimeLineBoundary {
	return _TimeLineBoundaryValues
}

// TimeLineBoundaryStrings returns a slice of all String values of the enum
func TimeLineBoundaryStrings() []string {
	strs := make([]string, len(_TimeLineBoundaryNames))
	copy(strs, _TimeLineBoundaryNames)
	return strs
}

// IsATimeLineBoundary returns "true" if the value is listed in the enum definition. "false" otherwise
func (i TimeLineBoundary) IsATimeLineBoundary() bool {
	for _, v := range _TimeLineBoundaryValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for TimeLineBoundary
func (i TimeLineBoundary) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for TimeLineBoundary
func (i *TimeLineBoundary) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("TimeLineBoundary should be a string, got %s", data)
	}

	var err error
	*i, err = TimeLineBoundaryString(s)
	return err
}

// MarshalYAML implements a YAML Marshaler for TimeLineBoundary
func (i TimeLineBoundary) MarshalYAML() (interface{}, error) {
	return i.String(), nil
}

// UnmarshalYAML implements a YAML Unmarshaler for TimeLineBoundary
func (i *TimeLineBoundary) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var s string
	if err := unmarshal(&s); err != nil {
		return err
	}

	var err error
	*i, err = TimeLineBoundaryString(s)
	return err
}
