// Code generated by "enumer -json -yaml -type=EmbellishmentType"; DO NOT EDIT.

package symbols

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _EmbellishmentTypeName = "NoEmbellishmentSingleGraceDoublingHalfDoublingThumbDoublingStrikeGStrikeThumbStrikeHalfStrikeGripHalfGripThumbGripGGripTaorluathBubblyBirlThrowDHeavyThrowDHalfThrowDHeavyHalfThrowDPeleThumbPeleHalfPeleDoubleStrikeGDoubleStrikeThumbDoubleStrikeHalfDoubleStrikeTripleStrikeGTripleStrikeThumbTripleStrikeHalfTripleStrikeDDoubleGraceEDoubleGraceFDoubleGraceGDoubleGraceThumbDoubleGrace"

var _EmbellishmentTypeIndex = [...]uint16{0, 15, 26, 34, 46, 59, 65, 72, 83, 93, 97, 105, 114, 119, 128, 134, 138, 144, 155, 165, 180, 184, 193, 201, 213, 226, 243, 259, 271, 284, 301, 317, 329, 341, 353, 365, 381}

const _EmbellishmentTypeLowerName = "noembellishmentsinglegracedoublinghalfdoublingthumbdoublingstrikegstrikethumbstrikehalfstrikegriphalfgripthumbgripggriptaorluathbubblybirlthrowdheavythrowdhalfthrowdheavyhalfthrowdpelethumbpelehalfpeledoublestrikegdoublestrikethumbdoublestrikehalfdoublestriketriplestrikegtriplestrikethumbtriplestrikehalftriplestrikeddoublegraceedoublegracefdoublegracegdoublegracethumbdoublegrace"

func (i EmbellishmentType) String() string {
	if i >= EmbellishmentType(len(_EmbellishmentTypeIndex)-1) {
		return fmt.Sprintf("EmbellishmentType(%d)", i)
	}
	return _EmbellishmentTypeName[_EmbellishmentTypeIndex[i]:_EmbellishmentTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _EmbellishmentTypeNoOp() {
	var x [1]struct{}
	_ = x[NoEmbellishment-(0)]
	_ = x[SingleGrace-(1)]
	_ = x[Doubling-(2)]
	_ = x[HalfDoubling-(3)]
	_ = x[ThumbDoubling-(4)]
	_ = x[Strike-(5)]
	_ = x[GStrike-(6)]
	_ = x[ThumbStrike-(7)]
	_ = x[HalfStrike-(8)]
	_ = x[Grip-(9)]
	_ = x[HalfGrip-(10)]
	_ = x[ThumbGrip-(11)]
	_ = x[GGrip-(12)]
	_ = x[Taorluath-(13)]
	_ = x[Bubbly-(14)]
	_ = x[Birl-(15)]
	_ = x[ThrowD-(16)]
	_ = x[HeavyThrowD-(17)]
	_ = x[HalfThrowD-(18)]
	_ = x[HeavyHalfThrowD-(19)]
	_ = x[Pele-(20)]
	_ = x[ThumbPele-(21)]
	_ = x[HalfPele-(22)]
	_ = x[DoubleStrike-(23)]
	_ = x[GDoubleStrike-(24)]
	_ = x[ThumbDoubleStrike-(25)]
	_ = x[HalfDoubleStrike-(26)]
	_ = x[TripleStrike-(27)]
	_ = x[GTripleStrike-(28)]
	_ = x[ThumbTripleStrike-(29)]
	_ = x[HalfTripleStrike-(30)]
	_ = x[DDoubleGrace-(31)]
	_ = x[EDoubleGrace-(32)]
	_ = x[FDoubleGrace-(33)]
	_ = x[GDoubleGrace-(34)]
	_ = x[ThumbDoubleGrace-(35)]
}

var _EmbellishmentTypeValues = []EmbellishmentType{NoEmbellishment, SingleGrace, Doubling, HalfDoubling, ThumbDoubling, Strike, GStrike, ThumbStrike, HalfStrike, Grip, HalfGrip, ThumbGrip, GGrip, Taorluath, Bubbly, Birl, ThrowD, HeavyThrowD, HalfThrowD, HeavyHalfThrowD, Pele, ThumbPele, HalfPele, DoubleStrike, GDoubleStrike, ThumbDoubleStrike, HalfDoubleStrike, TripleStrike, GTripleStrike, ThumbTripleStrike, HalfTripleStrike, DDoubleGrace, EDoubleGrace, FDoubleGrace, GDoubleGrace, ThumbDoubleGrace}

var _EmbellishmentTypeNameToValueMap = map[string]EmbellishmentType{
	_EmbellishmentTypeName[0:15]:         NoEmbellishment,
	_EmbellishmentTypeLowerName[0:15]:    NoEmbellishment,
	_EmbellishmentTypeName[15:26]:        SingleGrace,
	_EmbellishmentTypeLowerName[15:26]:   SingleGrace,
	_EmbellishmentTypeName[26:34]:        Doubling,
	_EmbellishmentTypeLowerName[26:34]:   Doubling,
	_EmbellishmentTypeName[34:46]:        HalfDoubling,
	_EmbellishmentTypeLowerName[34:46]:   HalfDoubling,
	_EmbellishmentTypeName[46:59]:        ThumbDoubling,
	_EmbellishmentTypeLowerName[46:59]:   ThumbDoubling,
	_EmbellishmentTypeName[59:65]:        Strike,
	_EmbellishmentTypeLowerName[59:65]:   Strike,
	_EmbellishmentTypeName[65:72]:        GStrike,
	_EmbellishmentTypeLowerName[65:72]:   GStrike,
	_EmbellishmentTypeName[72:83]:        ThumbStrike,
	_EmbellishmentTypeLowerName[72:83]:   ThumbStrike,
	_EmbellishmentTypeName[83:93]:        HalfStrike,
	_EmbellishmentTypeLowerName[83:93]:   HalfStrike,
	_EmbellishmentTypeName[93:97]:        Grip,
	_EmbellishmentTypeLowerName[93:97]:   Grip,
	_EmbellishmentTypeName[97:105]:       HalfGrip,
	_EmbellishmentTypeLowerName[97:105]:  HalfGrip,
	_EmbellishmentTypeName[105:114]:      ThumbGrip,
	_EmbellishmentTypeLowerName[105:114]: ThumbGrip,
	_EmbellishmentTypeName[114:119]:      GGrip,
	_EmbellishmentTypeLowerName[114:119]: GGrip,
	_EmbellishmentTypeName[119:128]:      Taorluath,
	_EmbellishmentTypeLowerName[119:128]: Taorluath,
	_EmbellishmentTypeName[128:134]:      Bubbly,
	_EmbellishmentTypeLowerName[128:134]: Bubbly,
	_EmbellishmentTypeName[134:138]:      Birl,
	_EmbellishmentTypeLowerName[134:138]: Birl,
	_EmbellishmentTypeName[138:144]:      ThrowD,
	_EmbellishmentTypeLowerName[138:144]: ThrowD,
	_EmbellishmentTypeName[144:155]:      HeavyThrowD,
	_EmbellishmentTypeLowerName[144:155]: HeavyThrowD,
	_EmbellishmentTypeName[155:165]:      HalfThrowD,
	_EmbellishmentTypeLowerName[155:165]: HalfThrowD,
	_EmbellishmentTypeName[165:180]:      HeavyHalfThrowD,
	_EmbellishmentTypeLowerName[165:180]: HeavyHalfThrowD,
	_EmbellishmentTypeName[180:184]:      Pele,
	_EmbellishmentTypeLowerName[180:184]: Pele,
	_EmbellishmentTypeName[184:193]:      ThumbPele,
	_EmbellishmentTypeLowerName[184:193]: ThumbPele,
	_EmbellishmentTypeName[193:201]:      HalfPele,
	_EmbellishmentTypeLowerName[193:201]: HalfPele,
	_EmbellishmentTypeName[201:213]:      DoubleStrike,
	_EmbellishmentTypeLowerName[201:213]: DoubleStrike,
	_EmbellishmentTypeName[213:226]:      GDoubleStrike,
	_EmbellishmentTypeLowerName[213:226]: GDoubleStrike,
	_EmbellishmentTypeName[226:243]:      ThumbDoubleStrike,
	_EmbellishmentTypeLowerName[226:243]: ThumbDoubleStrike,
	_EmbellishmentTypeName[243:259]:      HalfDoubleStrike,
	_EmbellishmentTypeLowerName[243:259]: HalfDoubleStrike,
	_EmbellishmentTypeName[259:271]:      TripleStrike,
	_EmbellishmentTypeLowerName[259:271]: TripleStrike,
	_EmbellishmentTypeName[271:284]:      GTripleStrike,
	_EmbellishmentTypeLowerName[271:284]: GTripleStrike,
	_EmbellishmentTypeName[284:301]:      ThumbTripleStrike,
	_EmbellishmentTypeLowerName[284:301]: ThumbTripleStrike,
	_EmbellishmentTypeName[301:317]:      HalfTripleStrike,
	_EmbellishmentTypeLowerName[301:317]: HalfTripleStrike,
	_EmbellishmentTypeName[317:329]:      DDoubleGrace,
	_EmbellishmentTypeLowerName[317:329]: DDoubleGrace,
	_EmbellishmentTypeName[329:341]:      EDoubleGrace,
	_EmbellishmentTypeLowerName[329:341]: EDoubleGrace,
	_EmbellishmentTypeName[341:353]:      FDoubleGrace,
	_EmbellishmentTypeLowerName[341:353]: FDoubleGrace,
	_EmbellishmentTypeName[353:365]:      GDoubleGrace,
	_EmbellishmentTypeLowerName[353:365]: GDoubleGrace,
	_EmbellishmentTypeName[365:381]:      ThumbDoubleGrace,
	_EmbellishmentTypeLowerName[365:381]: ThumbDoubleGrace,
}

var _EmbellishmentTypeNames = []string{
	_EmbellishmentTypeName[0:15],
	_EmbellishmentTypeName[15:26],
	_EmbellishmentTypeName[26:34],
	_EmbellishmentTypeName[34:46],
	_EmbellishmentTypeName[46:59],
	_EmbellishmentTypeName[59:65],
	_EmbellishmentTypeName[65:72],
	_EmbellishmentTypeName[72:83],
	_EmbellishmentTypeName[83:93],
	_EmbellishmentTypeName[93:97],
	_EmbellishmentTypeName[97:105],
	_EmbellishmentTypeName[105:114],
	_EmbellishmentTypeName[114:119],
	_EmbellishmentTypeName[119:128],
	_EmbellishmentTypeName[128:134],
	_EmbellishmentTypeName[134:138],
	_EmbellishmentTypeName[138:144],
	_EmbellishmentTypeName[144:155],
	_EmbellishmentTypeName[155:165],
	_EmbellishmentTypeName[165:180],
	_EmbellishmentTypeName[180:184],
	_EmbellishmentTypeName[184:193],
	_EmbellishmentTypeName[193:201],
	_EmbellishmentTypeName[201:213],
	_EmbellishmentTypeName[213:226],
	_EmbellishmentTypeName[226:243],
	_EmbellishmentTypeName[243:259],
	_EmbellishmentTypeName[259:271],
	_EmbellishmentTypeName[271:284],
	_EmbellishmentTypeName[284:301],
	_EmbellishmentTypeName[301:317],
	_EmbellishmentTypeName[317:329],
	_EmbellishmentTypeName[329:341],
	_EmbellishmentTypeName[341:353],
	_EmbellishmentTypeName[353:365],
	_EmbellishmentTypeName[365:381],
}

// EmbellishmentTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func EmbellishmentTypeString(s string) (EmbellishmentType, error) {
	if val, ok := _EmbellishmentTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _EmbellishmentTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to EmbellishmentType values", s)
}

// EmbellishmentTypeValues returns all values of the enum
func EmbellishmentTypeValues() []EmbellishmentType {
	return _EmbellishmentTypeValues
}

// EmbellishmentTypeStrings returns a slice of all String values of the enum
func EmbellishmentTypeStrings() []string {
	strs := make([]string, len(_EmbellishmentTypeNames))
	copy(strs, _EmbellishmentTypeNames)
	return strs
}

// IsAEmbellishmentType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i EmbellishmentType) IsAEmbellishmentType() bool {
	for _, v := range _EmbellishmentTypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for EmbellishmentType
func (i EmbellishmentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for EmbellishmentType
func (i *EmbellishmentType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("EmbellishmentType should be a string, got %s", data)
	}

	var err error
	*i, err = EmbellishmentTypeString(s)
	return err
}

// MarshalYAML implements a YAML Marshaler for EmbellishmentType
func (i EmbellishmentType) MarshalYAML() (interface{}, error) {
	return i.String(), nil
}

// UnmarshalYAML implements a YAML Unmarshaler for EmbellishmentType
func (i *EmbellishmentType) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var s string
	if err := unmarshal(&s); err != nil {
		return err
	}

	var err error
	*i, err = EmbellishmentTypeString(s)
	return err
}
